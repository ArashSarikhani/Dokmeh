{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.sarikhani\\\\Desktop\\\\dokmeh\\\\src\\\\presentor\\\\functionParty.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactCanvasConfetti from 'react-canvas-confetti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst canvasStyles = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0\n};\n\nconst Party = () => {\n  _s();\n\n  const [isAnimationEnabled, setIsAnimationEnabled] = useState();\n  const [animationInstance, setAnimationInstance] = useState(false);\n\n  function randomInRange(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n\n  function getAnimationSettings(originXA, originXB) {\n    return {\n      startVelocity: 30,\n      spread: 360,\n      ticks: 60,\n      zIndex: 0,\n      particleCount: 150,\n      origin: {\n        x: randomInRange(originXA, originXB),\n        y: Math.random() - 0.2\n      }\n    };\n  }\n\n  function nextTickAnimation() {\n    setAnimationInstance(getAnimationSettings(0.1, 0.3));\n    setAnimationInstance(getAnimationSettings(0.7, 0.9));\n  }\n\n  const startAnimation = event => {\n    if (!isAnimationEnabled) {\n      let intervalId = setInterval(nextTickAnimation(), 400);\n      setTimeout(() => {\n        clearInterval(intervalId);\n      }, 5000);\n    }\n  };\n\n  function getInstance(instance) {\n    setAnimationInstance(instance);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startAnimation(),\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactCanvasConfetti, {\n      refConfetti: getInstance(),\n      style: canvasStyles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Party, \"PRI7XqbqImKHYE0pcIxeF1GKiis=\");\n\n_c = Party;\nexport default Party;\n\nvar _c;\n\n$RefreshReg$(_c, \"Party\");","map":{"version":3,"sources":["C:/Users/a.sarikhani/Desktop/dokmeh/src/presentor/functionParty.jsx"],"names":["React","useState","useEffect","ReactCanvasConfetti","canvasStyles","position","pointerEvents","width","height","top","left","Party","isAnimationEnabled","setIsAnimationEnabled","animationInstance","setAnimationInstance","randomInRange","min","max","Math","random","getAnimationSettings","originXA","originXB","startVelocity","spread","ticks","zIndex","particleCount","origin","x","y","nextTickAnimation","startAnimation","event","intervalId","setInterval","setTimeout","clearInterval","getInstance","instance"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;;;AAIA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,OADO;AAEjBC,EAAAA,aAAa,EAAE,MAFE;AAGjBC,EAAAA,KAAK,EAAE,MAHU;AAIjBC,EAAAA,MAAM,EAAE,MAJS;AAKjBC,EAAAA,GAAG,EAAE,CALY;AAMjBC,EAAAA,IAAI,EAAE;AANW,CAArB;;AAWA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CZ,QAAQ,EAA5D;AACA,QAAM,CAACa,iBAAD,EAAoBC,oBAApB,IAA4Cd,QAAQ,CAAC,KAAD,CAA1D;;AAEA,WAASe,aAAT,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC7B,WAAOC,IAAI,CAACC,MAAL,MAAiBF,GAAG,GAAGD,GAAvB,IAA8BA,GAArC;AACH;;AAED,WAASI,oBAAT,CAA8BC,QAA9B,EAAwCC,QAAxC,EAAkD;AAC9C,WAAO;AACLC,MAAAA,aAAa,EAAE,EADV;AAELC,MAAAA,MAAM,EAAE,GAFH;AAGLC,MAAAA,KAAK,EAAE,EAHF;AAILC,MAAAA,MAAM,EAAE,CAJH;AAKLC,MAAAA,aAAa,EAAE,GALV;AAMLC,MAAAA,MAAM,EAAE;AACNC,QAAAA,CAAC,EAAEd,aAAa,CAACM,QAAD,EAAWC,QAAX,CADV;AAENQ,QAAAA,CAAC,EAAEZ,IAAI,CAACC,MAAL,KAAgB;AAFb;AANH,KAAP;AAWH;;AAED,WAASY,iBAAT,GAA8B;AAC1BjB,IAAAA,oBAAoB,CAACM,oBAAoB,CAAC,GAAD,EAAM,GAAN,CAArB,CAApB;AACAN,IAAAA,oBAAoB,CAACM,oBAAoB,CAAC,GAAD,EAAM,GAAN,CAArB,CAApB;AACH;;AAGD,QAAMY,cAAc,GAAGC,KAAK,IAAI;AAC9B,QAAI,CAACtB,kBAAL,EAAyB;AACvB,UAAIuB,UAAU,GAAIC,WAAW,CAACJ,iBAAiB,EAAlB,EAAsB,GAAtB,CAA7B;AACAK,MAAAA,UAAU,CAAC,MAAM;AACfC,QAAAA,aAAa,CAACH,UAAD,CAAb;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AAEF,GARD;;AAWA,WAASI,WAAT,CAAsBC,QAAtB,EAAgC;AAC5BzB,IAAAA,oBAAoB,CAACyB,QAAD,CAApB;AACH;;AAGD,sBACI;AAAA,4BACI;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAEP,cAAc,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,mBAAD;AAAqB,MAAA,WAAW,EAAEM,WAAW,EAA7C;AAAiD,MAAA,KAAK,EAAEnC;AAAxD;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAQH,CArDD;;GAAMO,K;;KAAAA,K;AAuDN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactCanvasConfetti from 'react-canvas-confetti';\r\n\r\n\r\n\r\nconst canvasStyles = {\r\n    position: 'fixed',\r\n    pointerEvents: 'none',\r\n    width: '100%',\r\n    height: '100%',\r\n    top: 0,\r\n    left: 0\r\n}\r\n\r\n\r\n\r\nconst Party = () => {\r\n\r\n    const [isAnimationEnabled, setIsAnimationEnabled] = useState();\r\n    const [animationInstance, setAnimationInstance] = useState(false);\r\n\r\n    function randomInRange(min, max) {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n\r\n    function getAnimationSettings(originXA, originXB) {\r\n        return {\r\n          startVelocity: 30,\r\n          spread: 360,\r\n          ticks: 60,\r\n          zIndex: 0,\r\n          particleCount: 150,\r\n          origin: {\r\n            x: randomInRange(originXA, originXB),\r\n            y: Math.random() - 0.2\r\n          }\r\n        }\r\n    }\r\n\r\n    function nextTickAnimation () {\r\n        setAnimationInstance(getAnimationSettings(0.1, 0.3));\r\n        setAnimationInstance(getAnimationSettings(0.7, 0.9));\r\n    }\r\n\r\n    \r\n    const startAnimation = event => {\r\n      if (!isAnimationEnabled) {\r\n        let intervalId =  setInterval(nextTickAnimation(), 400);\r\n        setTimeout(() => {\r\n          clearInterval(intervalId)\r\n        }, 5000);\r\n      }\r\n      \r\n    }\r\n      \r\n    \r\n    function getInstance (instance) {\r\n        setAnimationInstance(instance)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <button onClick={startAnimation()}>Start</button>\r\n            </div>\r\n            <ReactCanvasConfetti refConfetti={getInstance()} style={canvasStyles}/>              \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Party;\r\n"]},"metadata":{},"sourceType":"module"}